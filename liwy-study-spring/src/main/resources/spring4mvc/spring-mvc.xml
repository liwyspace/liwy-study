<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!--配置自动扫描的包 -->
	<context:component-scan base-package="com.liwy.study.spring.spring4.controller"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!--定义视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="4"/>
	</bean>

	<!--自定义视图解析器-->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="100" />
	</bean>

	<!--<mvc:annotation-driven /> 会自动注册 -->
	<!--RequestMappingHandlerMapping -->
	<!--RequestMappingHandlerAdapter -->
	<!--ExceptionHandlerExceptionResolver -->
	<!--三个bean。 -->

	<!--还将提供以下支持： -->
	<!--支持使用 ConversionService 实例对表单参数进行类型转换 -->
	<!--支持使用 @NumberFormat annotation、@DateTimeFormat 注解完成数据类型的格式化 -->
	<!--支持使用 @Valid 注解对 JavaBean 实例进行 JSR 303 验证 -->
	<!--支持使用 @RequestBody 和 @ResponseBody 注解 -->
	<mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>

	<!--
		全局自定义类型转换器
		并将其绑定到annotation-driven的conversion-service属性上
	-->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<ref bean="myConversion" />
			</set>
		</property>
	</bean>

	<!--自定义拦截器-->
	<mvc:interceptors>
		<!--自定义拦截器
            <bean class="com.liwy.oscafe.web.controller.interceptor.MyInterceptor"></bean>-->
		<mvc:interceptor>
			<!--设置拦截器作用的path-->
			<mvc:mapping path="/user/usersjson/**"/>
			<bean class="com.liwy.study.spring.spring4.controller.MyInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

    <!-- 异常映射处理器，将Controller抛出的异常转到特定View
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionAttribute" value="ex"></property>
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Throwable">error/501</prop>
            </props>
        </property>
    </bean>
    -->

	<!---文件上传设置-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="1024000" />
	</bean>

	<!--静态资源-->
	<mvc:resources mapping="/css/**" location="/css/"/>
	<mvc:resources mapping="/images/**" location="/images/"/>
	<mvc:resources mapping="/js/**" location="/js/"/>
	<mvc:resources mapping="/html/**" location="/WEB-INF/html/"/>

	<!-- 配置freeMarker的模板路径 -->
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/freeMarker/" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

	<!-- 配置freeMarker视图解析器 -->
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
		<property name="contentType" value="text/html;charset=UTF-8"></property>
		<property name="requestContextAttribute" value="request" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="order" value="2"/>
	</bean>

    <!--velocity模板配置-->
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/velocity/"/>
        <!--<property name="configLocation" value="classpath:velocity.properties"/>-->
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">utf-8</prop>
                <prop key="output.encoding">utf-8</prop>
                <prop key="file.resource.loader.cache">false</prop>
                <prop key="file.resource.loader.modificationCheckInterval">1</prop>
                <prop key="velocimacro.library.autoreload">false</prop>
            </props>
        </property>
    </bean>
    <!--VelocityViewResolver视图配置-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="suffix" value=".vm"/>
        <property name="prefix" value=""/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="order" value="3"/>
    </bean>

	<!--Thymeleaf模板引擎-->
	<bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<property name="prefix" value="/WEB-INF/thymeleaf/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
		<property name="cacheable" value="false" />
		<property name="characterEncoding" value="UTF-8"/>
	</bean>
	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
	</bean>
	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="characterEncoding"  value="UTF-8" />
		<property name="order" value="1" />
        <!--同时使用多个视图解析器时，order可能无效，可以使用viewNames进行视图分类解析-->
        <!--<property name="viewNames" value="thyme/*"/>-->
	</bean>

</beans>